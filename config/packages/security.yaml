security:
    enable_authenticator_manager: true
    encoders:
        App\Entity\User: bcrypt
    providers:
        users_in_memory: { memory: null }
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\AppLoginAuthenticator

            logout:
                path: app_logout

            login_throttling:
                max_attempts: 5
                interval: '1 minutes'

#            form_login:
#                login_path: login
#                check_path: login
#                username_parameter: '_username'
#                password_parameter: '_password'
#            guard:
#                authenticators:
#                    - App\Security\LoginFormAuthenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: '^/login$', roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: '^/users', roles: ROLE_ADMIN }
         - { path: '^/tasks/{id}/edit', roles: [IS_AUTHENTICATED_FULLY, ROLE_ADMIN] }
         - { path: '^/tasks/{id}/delete', roles: [IS_AUTHENTICATED_FULLY, ROLE_ADMIN] }
         - { path: '^/users/{id}/edit', roles: [IS_AUTHENTICATED_FULLY, ROLE_ADMIN] }

    role_hierarchy:
        ROLE_USER: ROLE_USER
        ROLE_ADMIN: [ROLE_ADMIN, ROLE_USER]
